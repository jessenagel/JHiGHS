# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

permissions:
  contents: write  # This grants write permissions to contents
  packages: write  # Needed for creating a release

on:
  push:
    tags:
      - 'v*' # Only execute when pushing a tag that matches v*

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Set up CMake and maven
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake maven
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build native libraries
        run: |
          scripts/build-native.sh
      - name: Build with Maven
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$GITHUB_WORKSPACE/build/lib
          export LIBRARY_PATH=$LIBRARY_PATH:$GITHUB_WORKSPACE/build/lib
          mvn -B package --file pom.xml
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            This release was automatically generated by GitHub Actions.
          draft: true
          prerelease: true
      - run: |
          ARTIFACT_PATHNAME=$(ls target/jhighs-*.jar | head -n 1)
          ARTIFACT_NAME=$(basename $ARTIFACT_PATHNAME)
          echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV
          echo "ARTIFACT_PATHNAME=${ARTIFACT_PATHNAME}" >> $GITHUB_ENV

      - name: Upload JAR file to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARTIFACT_PATHNAME }}  # Replace with your actual jar file name
          asset_name: ${{ env.ARTIFACT_NAME }} # Replace with your actual jar file name
          asset_content_type: application/java-archive